const styles = {
  container: isMobile => ({
    maxWidth: 600,
    margin: "0 auto",
    padding: isMobile ? "0 12px" : "0 24px",
    overflowAnchor: "none"
  }),
  topBar: {
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    padding: "12px 0"
  },
  title: {
    textAlign: "center",
    margin: "8px 0 24px",
    fontSize: 28,
    fontWeight: 700
  },
  input: {
    flex: 1,
    padding: "10px 12px",
    fontSize: 16,
    borderRadius: 6,
    border: "1px solid #ccc",
    boxSizing: "border-box",
  },
  smallInput: {
    padding: "8px 10px",
    fontSize: 16,
    WebkitTextSizeAdjust: "100%",
    borderRadius: 6,
    border: "1px solid #ccc",
    minWidth: '70px',
    boxSizing: "border-box",
  },
  textarea: {
    width: "100%",
    padding: "8px",
    fontSize: 16,
    WebkitTextSizeAdjust: "100%",
    borderRadius: 6,
    border: "1px solid #ccc",
    marginTop: 8,
    resize: "none",
    overflow: "hidden",
    overflowWrap: "break-word",
    whiteSpace: "pre-wrap",
    boxSizing: "border-box"
  },
  buttonPrimary: {
    padding: "12px 0",
    fontSize: 16,
    borderRadius: 6,
    border: 0,
    background: "#388e3c",
    color: "#fff",
    cursor: "pointer",
    width: "100%"
  },
  buttonSecondary: bg => ({
    padding: "8px 16px",
    fontSize: 14, // Standard-Fontsize fÃ¼r secondary buttons
    borderRadius: 6,
    border: 0,
    background: bg,
    color: "#fff",
    cursor: "pointer"
  }),
  symptomAddButton: bg => ({
    padding: "3px 10px",
    fontSize: 16,
    borderRadius: 6,
    border: 0,
    background: bg,
    color: "#fff",
    cursor: "pointer",
    flexShrink: 0,
    boxSizing: 'border-box'
  }),
  entryCard: (dark, isSymptomOnly = false, borderColor = 'transparent') => ({
    position: 'relative',
    marginBottom: 16,
    marginLeft: 5,
    padding: 12,
    borderRadius: 8,
    borderStyle: 'solid',
    borderColor,
    borderWidth: 2,
    background: isSymptomOnly
      ? (dark ? "#3c3c46" : "#f0f0f5")
      : (dark ? "#2a2a32" : "#fff"),
    boxShadow: "0 1px 4px #0002",
    pageBreakInside: 'avoid',
    breakInside: 'avoid'
  }),
  dayGroupContainer: (isPdf) => ({
    pageBreakInside: isPdf ? 'auto' : 'avoid',
    breakInside: isPdf ? 'auto' : 'avoid',
  }),
  groupHeader: (isPdf) => ({
    fontSize: 18,
    fontWeight: 600,
    margin: isPdf ? "24px 0 8px" : "24px 0 8px",
    color: isPdf ? '#333' : undefined,
    display: 'flex',
    alignItems: 'center',
    gap: '8px',
    width: '100%',
    background: isPdf ? '#f5f5f5' : 'transparent',
    padding: isPdf ? '4px 8px' : 0,
    borderBottom: isPdf ? '1px solid #ccc' : 'none',
  }),
  dayCover: (dark) => ({
    fontSize: 18,
    fontWeight: 600,
    margin: '24px 0 8px',
    padding: '12px 8px',
    borderRadius: 8,
    background: dark ? '#3a3a42' : '#e0e0e0',
    cursor: 'pointer',
    display: 'flex',
    alignItems: 'center',
  }),
  dayCoverText: {
    display: 'flex',
    alignItems: 'center',
    gap: '8px',
  },
  dayCoverCounts: {
    marginLeft: 'auto',
    display: 'flex',
    alignItems: 'center',
    gap: '13px',
  },
  dayCoverCountPair: (dark) => ({
    display: 'flex',
    alignItems: 'center',
    gap: '2px',
    color: dark ? '#fff' : '#333',
    fontSize: '14px',
  }),
  toast: {
    position: "fixed",
    top: 16,
    right: 16,
    background: "#333",
    color: "#fff",
    padding: "8px 12px",
    borderRadius: 4,
    opacity: 0.9,
    zIndex: 1000
  },
  backButton: {
    padding: "6px 12px",
    fontSize: 14,
    borderRadius: 6,
    border: 0,
    background: "#1976d2",
    color: "#fff",
    cursor: "pointer"
  },
  glassyIconButton: (dark) => ({
    background: dark ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.04)',
    border: dark ? '1px solid rgba(255, 255, 255, 0.15)' : '1px solid rgba(0, 0, 0, 0.1)',
    borderRadius: 6,
    padding: "6px 8px",
    cursor: "pointer",
    fontSize: 16,
    lineHeight: 1,
    color: dark ? '#f0f0f8' : '#333',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
  }),
  plainIconButton: {
    background: 'transparent',
    border: 'none',
    borderRadius: 6,
    padding: '6px 8px',
    cursor: 'pointer',
    fontSize: 16,
    lineHeight: 1,
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
  },
  glassyButton: (dark) => ({
    background: dark ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.04)',
    border: dark ? '1px solid rgba(255, 255, 255, 0.15)' : '1px solid rgba(0, 0, 0, 0.1)',
    borderRadius: 6,
    padding: '8px 16px',
    cursor: 'pointer',
    fontSize: 14,
    lineHeight: 1,
    color: dark ? '#f0f0f8' : '#333',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
  }),
  glassyButtonAccent: (dark) => ({
    ...styles.glassyButton(dark),
    border: '2px solid #555',
  }),
  collapseButton: (dark) => ({
    background: dark ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.04)',
    border: dark ? '1px solid rgba(255, 255, 255, 0.15)' : '1px solid rgba(0, 0, 0, 0.1)',
    borderRadius: 6,
    padding: '4px 6px',
    cursor: 'pointer',
    fontSize: 14,
    lineHeight: 1,
    color: dark ? '#f0f0f8' : '#333',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
  }),
  deleteIcon: {
    position: 'absolute',
    bottom: '8px',
    right: '8px',
    background: 'transparent',
    border: 'none',
    color: '#d32f2f',
    fontSize: '20px',
    cursor: 'pointer',
  },
  tagMarkerBase: {
    position: 'absolute',
    bottom: 0,
    right: 0,
    width: 0,
    height: 0,
    borderStyle: 'solid',
    zIndex: 5,
  },
  tagMarkerOuter: (tagColor) => ({
    ...styles.tagMarkerBase,
    borderWidth: '0 0 28px 28px',
    borderColor: `transparent transparent ${tagColor} transparent`,
    cursor: 'pointer',
  }),
  tagMarkerInnerHint: (cardBgColor) => ({
    ...styles.tagMarkerBase,
    borderWidth: '0 0 16px 16px',
    borderColor: `transparent transparent ${cardBgColor} transparent`,
    pointerEvents: 'none',
    zIndex: 6,
  }),
  colorPickerPopup: (dark) => ({
    position: 'absolute',
    bottom: '30px',
    right: '5px',
    background: dark ? '#4a4a52' : '#fff',
    padding: '8px',
    borderRadius: '6px',
    boxShadow: '0 2px 10px rgba(0,0,0,0.25)',
    zIndex: 30,
    display: 'flex',
    gap: '8px',
  }),
  colorPickerItem: (color, isActive, currentThemeDark) => ({
    width: '28px',
    height: '28px',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontSize: '20px',
    background: 'transparent',
    borderRadius: '4px',
    cursor: 'pointer',
    border: isActive ? (currentThemeDark ? '2px solid #FFFFFF' : '2px solid #000000') : '2px solid transparent',
    boxSizing: 'border-box',
  }),
  categoryButton: (color, isActive, dark) => ({
    width: '40px',
    height: '40px',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontSize: '24px',
    borderRadius: '8px',
    cursor: 'pointer',
    background: dark ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.04)',
    backdropFilter: 'blur(4px)',
    border: isActive
      ? `2px solid ${dark ? '#ffffff' : '#000000'}`
      : dark
      ? '1px solid rgba(255,255,255,0.15)'
      : '1px solid rgba(0,0,0,0.1)',
    boxSizing: 'border-box',
    color: dark ? '#f0f0f8' : '#333',
  }),
  categoryIcon: (top = '36px') => ({
    position: 'absolute',
    // Align icon with main text line instead of overall card height
    top,
    right: '6px',
    transform: 'translateY(-50%)',
    fontSize: '20px',
    zIndex: 6,
    cursor: 'pointer',
  }),
  pinContainer: {
    position: 'absolute',
    left: '0px',
    top: 0,
    bottom: 0,
    width: '20px',
    pointerEvents: 'none',
  },
  pin: (selected) => ({
    position: 'absolute',
    top: 0,
    left: 0,
    bottom: 0,
    width: '20px',
    cursor: 'pointer',
    pointerEvents: 'auto',
    zIndex: 5,
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'flex-start',
    paddingLeft: '2px',
    paddingBottom: '0px',
    fontSize: '14px',
  }),
  connectionSvg: {
    position: 'absolute',
    left: '0px',
    width: '20px',
    pointerEvents: 'auto',
    overflow: 'visible',
    cursor: 'pointer',
  },
  portionContainer: (editing = false, top = '36px') => ({
    position: 'absolute',
    top: editing ? '31px' : top,
    right: editing ? '12px' : '33px',
    transform: 'translateY(-50%)',
    display: 'flex',
    alignItems: 'center',
    gap: '10px',
    zIndex: 6,
  }),
  portionLabel: (size) => ({
    position: 'relative',
    fontSize: '16px',
    fontWeight: 600,
    cursor: 'pointer',
    color:
      size === 'S'
        ? '#8bc34a'
        : size === 'M'
        ? '#ffb74d'
        : size === 'L'
        ? '#e57373'
        : '#999',
  }),
  portionPickerPopup: (dark, openLeft = false) => ({
    position: 'absolute',
    top: '50%',
    ...(openLeft
      ? { right: 'calc(100% + 10px)' }
      : { left: 'calc(100% + 4px)' }),
    transform: 'translateY(-50%)',
    background: dark ? '#4a4a52' : '#fff',
    padding: '8px',
    borderRadius: '6px',
    boxShadow: '0 2px 10px rgba(0,0,0,0.25)',
    zIndex: 30,
    display: 'flex',
    flexDirection: 'row',
    gap: '6px',
  }),
  portionPickerItem: (color, isActive, dark) => ({
    padding: '4px 8px',
    cursor: 'pointer',
    borderRadius: '4px',
    textAlign: 'center',
    background: isActive ? (dark ? '#555' : '#eee') : 'transparent',
    color,
  }),
  personInfoBox: (dark) => ({
    display: 'flex',
    flexWrap: 'wrap',
    gap: '12px',
    margin: '8px 0 16px',
    padding: '8px 12px',
    borderRadius: '8px',
    background: dark ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.04)',
    border: dark ? '1px solid rgba(255,255,255,0.15)' : '1px solid rgba(0,0,0,0.1)',
    backdropFilter: 'blur(4px)',
    color: dark ? '#f0f0f8' : '#333',
    fontSize: '14px',
  }),
};

export default styles;
